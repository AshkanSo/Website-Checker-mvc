// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SiteChecker_mvc.Models;

#nullable disable

namespace SiteChecker_mvc.Migrations
{
    [DbContext(typeof(SiteCheckerDbContext))]
    [Migration("20240615130439_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("PhoneNumbersWebSites", b =>
                {
                    b.Property<int>("PhoneNumbersPK_PhoneNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WebSitesCollectionPK_WebSite")
                        .HasColumnType("INTEGER");

                    b.HasKey("PhoneNumbersPK_PhoneNumber", "WebSitesCollectionPK_WebSite");

                    b.HasIndex("WebSitesCollectionPK_WebSite");

                    b.ToTable("PhoneNumbersWebSites");
                });

            modelBuilder.Entity("SiteChecker_mvc.Models.ErrorLogs", b =>
                {
                    b.Property<int>("PK_ErrorLogs")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EndOfError")
                        .HasColumnType("TEXT");

                    b.Property<string>("ErrorCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("FK_WebSiteId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartOfError")
                        .HasColumnType("TEXT");

                    b.Property<int>("WebSitePK_WebSite")
                        .HasColumnType("INTEGER");

                    b.HasKey("PK_ErrorLogs");

                    b.HasIndex("WebSitePK_WebSite");

                    b.ToTable("ErrorLogs");
                });

            modelBuilder.Entity("SiteChecker_mvc.Models.PhoneNumbers", b =>
                {
                    b.Property<int>("PK_PhoneNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PK_PhoneNumber");

                    b.ToTable("PhoneNumbers");

                    b.HasData(
                        new
                        {
                            PK_PhoneNumber = 1,
                            Name = "User1",
                            Number = "123456"
                        },
                        new
                        {
                            PK_PhoneNumber = 2,
                            Name = "Contact1",
                            Number = "987654"
                        });
                });

            modelBuilder.Entity("SiteChecker_mvc.Models.WebSites", b =>
                {
                    b.Property<int>("PK_WebSite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("ServerStatus")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PK_WebSite");

                    b.ToTable("WebSites");

                    b.HasData(
                        new
                        {
                            PK_WebSite = 1,
                            Name = "Fadia",
                            ServerStatus = true,
                            Url = "https://fadiashop.com/wakeup"
                        },
                        new
                        {
                            PK_WebSite = 2,
                            Name = "Varzesh3",
                            ServerStatus = true,
                            Url = "https://www.varzesh3.com/livescore"
                        });
                });

            modelBuilder.Entity("PhoneNumbersWebSites", b =>
                {
                    b.HasOne("SiteChecker_mvc.Models.PhoneNumbers", null)
                        .WithMany()
                        .HasForeignKey("PhoneNumbersPK_PhoneNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiteChecker_mvc.Models.WebSites", null)
                        .WithMany()
                        .HasForeignKey("WebSitesCollectionPK_WebSite")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SiteChecker_mvc.Models.ErrorLogs", b =>
                {
                    b.HasOne("SiteChecker_mvc.Models.WebSites", "WebSite")
                        .WithMany("ErrorLogsCollection")
                        .HasForeignKey("WebSitePK_WebSite")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WebSite");
                });

            modelBuilder.Entity("SiteChecker_mvc.Models.WebSites", b =>
                {
                    b.Navigation("ErrorLogsCollection");
                });
#pragma warning restore 612, 618
        }
    }
}
